{"version":3,"sources":["Components/CommonComponents/TableWithDetailButton.js","Constants/config.js","Components/AdminManagement/AllUsersData/ColumnData.js","Components/AdminManagement/AllUsersData/index.js","Components/AdminManagement/AllUsersData/userItem.js","Components/AdminManagement/index.js"],"names":["TableWithDetailButton","columns","data","RouteBtn","isViewDetailBtn","isViewIconBtn","RouteForIconBtn","title","history","actionIcon","dispatchh","useHistory","myTitle","className","expandIcon","id","style","marginLeft","actions","icon","tooltip","onClick","e","preventDefault","push","isFreeAction","components","Action","props","action","margin","textDecoration","fontSize","to","event","options","actionsColumnIndex","headerStyle","backgroundColor","color","localization","header","config","itemsPerScreen","userPerScreen","handleDelete","field","render","rowData","connect","deleteAdmin","UserData","fname","lname","email","contact_no","Route","ADMIN_DETAILS_BTN","state","admin","getSubAdminsByItoId","getAvailableITO","subAdminList","itoId","useSelector","auth","userDetails","ito_id","useState","setCount","countData","length","useEffect","Math","floor","console","log","browserRoute","AdminManagement","ADD_NEW_SUB_ADMIN"],"mappings":"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","file":"static/js/32.16813107.chunk.js","sourcesContent":["import React from \"react\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport MaterialTable from \"material-table\";\nimport { Route, useHistory } from \"react-router\";\nimport { Maximize } from \"@material-ui/icons\";\nimport ExploreIcon from \"@mui/icons-material/Explore\";\nimport { Link } from \"react-router-dom\";\n\nfunction TableWithDetailButton({\n  columns,\n  data,\n  RouteBtn,\n  isViewDetailBtn,\n  isViewIconBtn,\n  RouteForIconBtn,\n  title,\n  actionIcon,\n  dispatchh,\n}) {\n  const history = useHistory();\n  const myTitle = title;\n  return (\n    <div className=\"table-responsive\">\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <h6 style={{ marginLeft: \"1rem\" }}>{myTitle}</h6>\n        </AccordionSummary>\n        <AccordionDetails>\n          <MaterialTable\n            title={title}\n            columns={columns}\n            data={data}\n            // Section for View Detail button\n\n            actions={[\n              {\n                ...(isViewDetailBtn && {\n                  icon: \"\",\n                  tooltip: \"View Details\",\n                  onClick: (e, data) => {\n                    e.preventDefault();\n                    history.push(`${RouteBtn}${data?.id}`);\n                  },\n                }),\n              },\n              {\n                ...(isViewIconBtn && {\n                  icon: \"Explore\",\n                  tooltip: \"Explore more\",\n                  isFreeAction: true,\n                }),\n              },\n            ]}\n            components={{\n              Action: (props) => {\n                return (\n                  <>\n                    {props.action.icon === \"Explore\" && (\n                      <Link\n                        style={{\n                          margin: \"20px\",\n                          textDecoration: \"underline\",\n                          fontSize: \"15px\",\n                        }}\n                        to={RouteForIconBtn}\n                      >\n                        <b>Explore More</b>\n                      </Link>\n                    )}\n                    {props.action.icon === \"\" && (\n                      <button\n                        onClick={(event) =>\n                          props.action.onClick(event, props.data)\n                        }\n                        className=\"dls-btn bg-semi-black text-white width-max-content\"\n                      >\n                        View Details\n                      </button>\n                    )}\n                  </>\n                );\n              },\n            }}\n            options={{\n              actionsColumnIndex: -1,\n              headerStyle: {\n                backgroundColor: \"#0394FD\",\n                color: \"#FFF\",\n              },\n            }}\n            localization={{\n              header: {\n                actions: \"\",\n              },\n            }}\n            // Section for Explore More Link\n            // {...(isViewIconlBtn && {\n            //   actions: [\n            //     {\n            //       icon: { actionIcon },\n            //       tooltip: \"Explore more\",\n            //       isFreeAction: true,\n            //     },\n            //   ],\n            //   components: {\n            //     Action: (props) => (\n            //       <Link\n            //         style={{\n            //           margin: \"20px\",\n            //           textDecoration: \"underline\",\n            //           fontSize: \"15px\",\n            //         }}\n            //         to={RouteForIconBtn}\n            //       >\n            //         <b>Explore More</b>\n            //       </Link>\n            //     ),\n            //   },\n            // })}\n          />\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default TableWithDetailButton;\n","const config = {\n  itemsPerScreen: 5,\n  userPerScreen: 10,\n};\n\nexport default config;\n","export const columns = (handleDelete) => {\n  return [\n    { title: \"Name\", field: \"\" },\n    { title: \"Email\", field: \"\" },\n    { title: \"Contact\", field: \"\" },\n    {\n      title: null,\n      field: \"button\",\n      render: (rowData) => (\n        <button\n          className=\"dls-btn bg-semi-black text-white width-max-content\"\n          onClick={() => handleDelete(rowData?.id)}\n        >\n          <strong> REMOVE</strong>\n        </button>\n      ),\n    },\n  ];\n};\n","import React, { useEffect, useState } from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport config from \"./../../../Constants/config\";\nimport { columns } from \"./ColumnData\";\nimport TableWithDetailButton from \"../../CommonComponents/TableWithDetailButton\";\nimport UserItem from \"./userItem\";\nimport { connect, useSelector } from \"react-redux\";\nimport {\n  getSubAdminsByItoId,\n  getAvailableITO,\n} from \"../../../Redux/actions/actions\";\nimport ColumnData from \"./ColumnData\";\nimport browserRoute from \"../../../Constants/browserRoutes\";\nimport { deleteAdmin } from \"../../../Redux/actions/actions\";\n\nconst UsersData = ({\n  getSubAdminsByItoId,\n  getAvailableITO,\n  data,\n  deleteAdmin,\n}) => {\n  const { subAdminList } = data;\n  const itoId = useSelector((state) => state.auth.userDetails.ito_id);\n  //screen No. e.g; 1 or 2 or 3 etc\n  const [screen, setScreen] = useState(1);\n  //Total No Of Screens\n  const [count, setCount] = useState(0);\n  //No. of Items Per Screen\n\n  const handleChange = (event, value) => {\n    setScreen(value);\n  };\n  const countData = subAdminList && subAdminList.length;\n\n  //noOfScreens\n  useEffect(() => {\n    if (countData % config.userPerScreen === 0) {\n      setCount(Math.floor(countData / config.userPerScreen));\n    } else {\n      setCount(Math.floor(countData / config.userPerScreen) + 1);\n    }\n  }, [countData, config.userPerScreen]);\n\n  const handleDelete = (id) => {\n    deleteAdmin(id);\n  };\n\n  useEffect(() => {\n    getSubAdminsByItoId(itoId || 0);\n    // getAvailableITO();\n  }, []);\n  console.log(subAdminList);\n  return (\n    <div className=\"card mb-2\">\n      <div className=\"card-body p-0\">\n        <div className=\"table-responsive\">\n          <TableWithDetailButton\n            data={subAdminList}\n            columns={columns(handleDelete)}\n            title={\"LIST OF ALL SUB ADMINS\"}\n            isViewDetailBtn={true}\n            RouteBtn={browserRoute.ADMIN_DETAILS_BTN}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mpaStateToProps = (state) => {\n  return {\n    data: state.admin,\n  };\n};\n\nexport default connect(mpaStateToProps, {\n  getSubAdminsByItoId,\n  getAvailableITO,\n})(UsersData);\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Route from \"../../../Constants/browserRoutes\";\n\nimport { connect } from \"react-redux\";\nimport { deleteAdmin } from \"../../../Redux/actions/actions\";\n\nconst UserItem = ({ UserData, deleteAdmin }) => {\n  const handleDelete = (id) => {\n    deleteAdmin(id);\n  };\n\n  return (\n    <Fragment>\n      <td>{UserData.fname + \" \" + UserData.lname}</td>\n      <td>{UserData.email}</td>\n\n      <td>{UserData.contact_no}</td>\n      <td>\n        <Link\n          className=\"dls-btn bg-semi-black text-white\"\n          to={Route.ADMIN_DETAILS_BTN + `${UserData.id}`}\n        >\n          VIEW DETAILS\n        </Link>\n      </td>\n      <td>\n        <Link\n          className=\"text-danger\"\n          // href=\"#\"\n          onClick={() => handleDelete(UserData.id)}\n        >\n          <strong> REMOVE</strong> <i className=\"fa fa-trash-alt\"></i>\n        </Link>\n      </td>\n    </Fragment>\n  );\n};\n\nexport default connect(null, { deleteAdmin })(UserItem);\n","import React, { Fragment } from \"react\";\n\nimport UsersData from \"./AllUsersData\";\nimport { Link } from \"react-router-dom\";\n\nimport Route from \"../../Constants/browserRoutes\";\n\nconst AdminManagement = () => {\n  return (\n    <Fragment>\n      <div className=\"col-12 col-md-10 offset-md-1\">\n        {/* <!-- inner row --> */}\n        <div className=\"row\">\n          <div className=\"col-sm-12 d-flex justify-content-between\">\n            <div className=\"\">\n              {/* <div className=\"selct-drop d-block  \"> */}\n            </div>\n\n            <div className=\"\">\n              <Link\n                className=\"exp-mr-link text-dr-green\"\n                to={Route.ADD_NEW_SUB_ADMIN}\n              >\n                ADD NEW SUB ADMIN{\" \"}\n                <i className=\"fa fa-plus-circle ml-1 font-24\"></i>\n              </Link>\n            </div>\n          </div>\n\n          {/* </div> */}\n          <div className=\"col-md-12\">\n            <UsersData />\n          </div>\n        </div>\n        {/* <!-- end inner row --> */}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default AdminManagement;\n"],"sourceRoot":""}