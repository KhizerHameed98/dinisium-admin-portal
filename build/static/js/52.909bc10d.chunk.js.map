{"version":3,"sources":["Components/Subscription/SubscriptionDetail/VerifySubscriptionCreationModal.js","Components/Subscription/SubscriptionDetail/index.js"],"names":["VerifySubscriptionCreationModal","showModal","setShowModal","useState","openModal","setOpenModal","rejectionMessage","setRejetionMessage","dispatch","useDispatch","subscriptionDetail","useSelector","state","subscription","handleClose","verifyRequestHandler","e","status","rejection_Message","preventDefault","verifySubscriptionCreation","id","Modal","size","show","onHide","style","opacity","centered","className","type","onClick","Body","Footer","backdrop","placeholder","name","value","onChange","target","required","SubscriptionDetail","match","history","useHistory","stateId","auth","userDetails","user_id","console","log","admins","useEffect","getSubscriptionById","params","display","flexWrap","ito_name","ito_token","ito_series","format","withTitle","start_date","end_date","description","border","threshold_type","threshold","current","map","admin","fname","lname","Date","ito_id","is_launched","push","browserRoute","ITO_MANAGEMENT_DETAILS_BTN","CREATE_ITO_FOR_SUBSCIRPTION_BTN","color","disabled","replace","charAt","toUpperCase"],"mappings":"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","file":"static/js/52.909bc10d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { verifySubscriptionCreation } from \"../../../Redux/actions/actions\";\n\nconst VerifySubscriptionCreationModal = ({ showModal, setShowModal }) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [rejectionMessage, setRejetionMessage] = useState(\"\");\n  const dispatch = useDispatch();\n  const subscriptionDetail = useSelector(\n    (state) => state.subscription?.subscriptionDetail\n  );\n\n  const handleClose = () => setShowModal(false);\n  const handleShow = () => setShowModal(true);\n\n  const ModalOpens = () => {\n    setOpenModal(true);\n  };\n\n  const ModalClose = () => {\n    setOpenModal(false);\n  };\n\n  const verifyRequestHandler = (e, status, rejection_Message) => {\n    e.preventDefault();\n    dispatch(\n      verifySubscriptionCreation(subscriptionDetail?.id, {\n        status,\n        rejection_Message,\n      })\n    );\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Modal\n        size=\"sm\"\n        show={showModal}\n        onHide={handleClose}\n        style={{ opacity: 1 }}\n        centered\n      >\n        <div className=\"modal-header border-0\">\n          <button type=\"button\" className=\"close\" onClick={handleClose}>\n            <span className=\"font-18\">&times;</span>\n          </button>\n        </div>\n        <Modal.Body className=\"text-center\">\n          <p>Are you sure you want to verify Subscription create request?</p>\n          <button\n            type=\"button\"\n            className=\"btn btn-primary w-30 btn-md mr-2\"\n            onClick={(e) => verifyRequestHandler(e, \"approved\")}\n          >\n            Approve\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-danger w-25 btn-md\"\n            // onClick={(e) => verifyRequestHandler(e, \"rejected\")}\n            onClick={ModalOpens}\n          >\n            Reject\n          </button>\n        </Modal.Body>\n        <Modal.Footer className=\"border-0\"></Modal.Footer>\n      </Modal>\n\n      {/*  Rejection Modal */}\n      <Modal\n        show={openModal}\n        backdrop=\"static\"\n        onHide={ModalClose}\n        size=\"md\"\n        centered\n      >\n        <div className=\"modal-header border-0\">\n          <button type=\"button\" className=\"close\" onClick={handleClose}>\n            <span className=\"font-18\">&times;</span>\n          </button>\n        </div>\n        <Modal.Body className=\"text-center\">\n          <div>\n            <p>Give a Reason For Rejection</p>\n            <input\n              type=\"text\"\n              placeholder=\"Rejection Message*\"\n              className=\"form-control\"\n              name=\"rejection_message\"\n              value={rejectionMessage}\n              onChange={(e) => setRejetionMessage(e.target.value)}\n              required\n            />\n            <br />\n            <button\n              type=\"button\"\n              className=\"btn btn-danger w-30 btn-md mr-2\"\n              onClick={(e) =>\n                verifyRequestHandler(e, \"rejected\", rejectionMessage)\n              }\n            >\n              Reject\n            </button>\n          </div>\n        </Modal.Body>\n        <Modal.Footer className=\"border-0\"></Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default VerifySubscriptionCreationModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSubscriptionById } from \"../../../Redux/actions/actions\";\nimport Moment from \"react-moment\";\nimport VerifySubscriptionCreationModal from \"./VerifySubscriptionCreationModal\";\nimport { useHistory } from \"react-router\";\nimport browserRoute from \"../../../Constants/browserRoutes\";\nimport { subscription } from \"../../../Routes/serverRoutes\";\n\nconst SubscriptionDetail = ({ match }) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const subscriptionDetail = useSelector(\n    (state) => state.subscription?.subscriptionDetail\n  );\n\n  const stateId = useSelector((state) => {\n    return state?.auth?.userDetails?.id;\n  });\n  // console.log('detail' , subscriptionDetail?.user_id);\n  const { user_id } = subscriptionDetail;\n  console.log(\"id\", user_id, stateId);\n\n  const admins = useSelector((state) => state.subscription?.admins);\n\n  const [showModal, setShowModal] = useState(false);\n\n  const toCreateIto = (e) => {\n    history.push(\n      browserRoute.CREATE_ITO_FOR_SUBSCIRPTION_BTN + subscriptionDetail?.id\n    );\n  };\n\n  const toItoDetail = (e) => {\n    history.push(\n      browserRoute.ITO_MANAGEMENT_DETAILS_BTN + subscriptionDetail?.ito_id\n    );\n  };\n\n  const showVerifySubscriptionModal = (e) => {\n    e.preventDefault();\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    dispatch(getSubscriptionById(match.params.id));\n  }, []);\n\n  return (\n    <>\n      <div className=\"col-12 col-md-8 offset-md-2\">\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card p-5\">\n              <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n                {/* <span className=\"pro-heading-b mb-2 mr-3\">\n                  ITO Seriess Name\n                </span>{\" \"} */}\n                <div className=\"mr-4\">\n                  <b>ITO name</b>\n                  <p className=\"pro-heading-b\">\n                    {subscriptionDetail?.ito_name}\n                  </p>\n                </div>\n                <div className=\"mr-4\">\n                  <b>Token name</b>\n                  <p className=\"pro-heading-b\">\n                    {subscriptionDetail?.ito_token}\n                  </p>\n                </div>\n                <div className=\"mr-4\">\n                  <b>Series name</b>\n                  <p className=\"pro-heading-b\">\n                    {subscriptionDetail?.ito_series}\n                  </p>\n                </div>\n              </div>\n              <p>\n                <span className=\"pro-date mb-0\">\n                  <i className=\"far fa-calendar\"></i>\n                  <Moment format=\"D MMM YYYY\" withTitle>\n                    {subscriptionDetail?.start_date}\n                  </Moment>{\" \"}\n                  -{\" \"}\n                  <Moment format=\"D MMM YYYY\" withTitle>\n                    {subscriptionDetail?.end_date}\n                  </Moment>\n                </span>\n              </p>\n              <div className=\"card mb-4\">\n                <div className=\"card-body bg-lit-gr\">\n                  <h4 className=\"font-18\">Description</h4>\n                  <p className=\"font-14 text-justify\">\n                    {subscriptionDetail?.description}\n                  </p>\n                </div>\n              </div>\n              <ul className=\"row profile-detail\">\n                <li className=\"col-12 col-md-6\" style={{ border: \"0px\" }}>\n                  <span>Threshold Type</span>\n                  <span>{subscriptionDetail?.threshold_type}</span>\n                </li>\n                <li className=\"col-12 col-md-6\" style={{ border: \"0px\" }}>\n                  <span>Threshold</span>\n                  <span>$ {subscriptionDetail?.threshold}</span>\n                </li>\n                <li className=\"col-12 col-md-6\" style={{ border: \"0px\" }}>\n                  <span>Threshold reached</span>\n                  <span>$ {subscriptionDetail?.current}</span>\n                </li>\n              </ul>\n              <div className=\"col-md-6 mb-2\">\n                <b>Alloted Admins</b>\n                <ul>\n                  {admins?.map((admin) => (\n                    <li key={admin.id}>{`${admin.fname} ${admin.lname}`}</li>\n                  ))}\n                </ul>\n              </div>\n\n              {subscriptionDetail?.current >= subscriptionDetail?.threshold &&\n                (new Date(subscriptionDetail?.end_date) <= new Date() ||\n                  subscriptionDetail?.threshold_type === \"limited\") && (\n                  <>\n                    {subscriptionDetail?.ito_id &&\n                    subscriptionDetail?.is_launched ? (\n                      <div className=\"mt-3 text-center\">\n                        <h2>Successful</h2>\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary btn-lg mr-3\"\n                          onClick={toItoDetail}\n                        >\n                          View Detail\n                        </button>\n                      </div>\n                    ) : (\n                      <div className=\"mt-3\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-primary w-100 btn-lg mr-3\"\n                          onClick={toCreateIto}\n                          //   disabled={seriesDetail?.status !== \"pending\"}\n                        >\n                          Launch Subscription\n                        </button>\n                      </div>\n                    )}\n                  </>\n                )}\n              {subscriptionDetail?.current < subscriptionDetail?.threshold &&\n                new Date(subscriptionDetail?.end_date) <= new Date() && (\n                  <div className=\"mt-3 text-center\" style={{ color: \"red\" }}>\n                    <h2>Unsuccessful</h2>\n                  </div>\n                )}\n            </div>\n\n            <div className=\"mt-3\">\n              {subscriptionDetail?.user_id === stateId ? null : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary w-100 btn-lg mr-3\"\n                  onClick={showVerifySubscriptionModal}\n                  disabled={\n                    subscriptionDetail?.status !== \"pending\" ||\n                    subscriptionDetail?.status !== \"pending\" ||\n                    subscriptionDetail?.status !== \"pending\" ||\n                    subscriptionDetail?.status !== \"pending\" ||\n                    subscriptionDetail?.status !== \"pending\" ||\n                    subscriptionDetail?.status !== \"pending\" ||\n                    subscriptionDetail?.status !== \"pending\" ||\n                    new Date(subscriptionDetail?.end_date) <= new Date()\n                  }\n                >\n                  {subscriptionDetail?.status === \"pending\"\n                    ? \"Verify\"\n                    : subscriptionDetail?.status?.replace(\n                        subscriptionDetail?.status?.charAt(0),\n                        subscriptionDetail?.status?.charAt(0).toUpperCase()\n                      )}\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {showModal && (\n        <VerifySubscriptionCreationModal\n          showModal={showModal}\n          setShowModal={setShowModal}\n        />\n      )}\n    </>\n  );\n};\n\nexport default SubscriptionDetail;\n"],"sourceRoot":""}