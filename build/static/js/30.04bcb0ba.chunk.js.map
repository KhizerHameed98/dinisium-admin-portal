{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","Components/AdminManagement/SubAdminDetails/index.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_typeof","obj","Symbol","iterator","constructor","connect","state","adminDetails","admin","adminITO","adminITOList","getSubAdminById","adminLinkITO","getAllPermissions","assignPermission","otherProps","subAdminDetail","useSelector","permissionsData","useState","selectedData","setSelectedData","useEffect","id","match","params","fname","lname","email","contact_no","role","country","ito_id","permissions","ito_name","subAdminPermissions","map","permission","name","join","className","defaultValue","isMulti","options","classNamePrefix","onChange","e","type","onClick","preventDefault","subAdminId"],"mappings":"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","file":"static/js/30.04bcb0ba.chunk.js","sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import React, { Fragment, useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { connect, useSelector } from \"react-redux\";\nimport {\n  getSubAdminById,\n  adminLinkITO,\n  getAllPermissions,\n  assignPermission,\n} from \"../../../Redux/actions/actions\";\n// import data from \"./data\";\n\nconst AdminDetails = ({\n  adminDetails,\n  getSubAdminById,\n  adminLinkITO,\n  getAllPermissions,\n  assignPermission,\n  ...otherProps\n}) => {\n  const subAdminDetail = useSelector((state) => state.admin.subAdminDetail);\n  const permissionsData = useSelector((state) => state.admin.permissionsData);\n\n  const [selectITO, setSeletITO] = useState();\n  const [selectedData, setSelectedData] = useState([]);\n  const [success, setSuccess] = useState(false);\n  const [selectedName, setSelectedName] = useState(\"\");\n\n  const handleSelectITO = (e) => {\n    const { value } = e.target;\n\n    setSeletITO(value);\n\n    const index = otherProps.adminITO.findIndex(\n      (item) => item.id === parseInt(value)\n    );\n\n    setSelectedName(otherProps.adminITO[index].name);\n  };\n\n  const handleUpdateITO = () => {\n    let obj = {\n      ito_id: selectITO,\n    };\n\n    adminLinkITO({ id, obj, setSuccess });\n  };\n\n  const onChangeSelect = (e) => {\n    setSelectedData(e);\n  };\n\n  const assignPermissionBtn = (e) => {\n    e.preventDefault();\n    assignPermission({ selectedData, subAdminId: subAdminDetail.id });\n  };\n\n  useEffect(() => {\n    let id = otherProps.match.params.id;\n    getSubAdminById(id);\n    getAllPermissions();\n  }, []);\n\n  const {\n    fname,\n    lname,\n    email,\n    contact_no,\n    role,\n    id,\n    country,\n    ito_id,\n    ito_name,\n    permissions,\n  } = subAdminDetail;\n\n  let subAdminPermissions =\n    (permissions &&\n      permissions.length > 0 &&\n      permissions.map((permission) => permission.name).join(\",\")) ||\n    \"\";\n\n  return (\n    <Fragment>\n      <div className=\"col-12 col-md-8 offset-md-2\">\n        {/* <!-- inner row --> */}\n        <div className=\"row\">\n          <div className=\"col-sm-12\">\n            <div className=\"card pu-rel text-dark p-5 mb-3\">\n              <h2 className=\"page-title-heading mb-4 font-30 text-center\">\n                Details\n              </h2>\n\n              <div className=\"row\">\n                <div className=\"col-12 col-md-12\">\n                  <ul className=\"row profile-detail\">\n                    <li className=\"col-12 col-md-6\">\n                      <span>Name:</span>\n                      <span>{`${fname || \"\"} ${lname || \"\"}`}</span>\n                    </li>\n                    <li className=\"col-12 col-md-6\">\n                      <span>Email:</span>\n                      <span>{email || \"\"}</span>\n                    </li>\n                    <li className=\"col-12 col-md-6\">\n                      <span>Contact No:</span>\n                      <span>{contact_no || \"\"}</span>\n                    </li>\n                    <li className=\"col-12 col-md-6\">\n                      <span>Role:</span>\n                      <span>{role || \"\"}</span>\n                    </li>\n                    <li className=\"col-12 col-md-6\">\n                      <span>Country:</span>\n                      <span>{country || \"\"}</span>\n                    </li>\n                    <li className=\"col-12 col-md-6\">\n                      <span>Linked to:</span>\n                      <span>\n                        {(permissions && permissions.length > 0\n                          ? subAdminPermissions\n                            ? subAdminPermissions\n                            : \"\"\n                          : \"No Permission\") || \"\"}\n                      </span>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          {ito_id && (\n            <div className=\"col-sm-12 my-4\">\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <label className=\"mr-3 font-weight-bold text-dark font-16\">\n                    Assign Permissions\n                  </label>\n                  {/* <select\n                  className=\"custom-select w-50\"\n                  onChange={handleSelectITO}\n                >\n                  <option defaultChecked>Section Name</option>\n                  {otherProps.adminITO.map((ito, index) => (\n                    <option value={ito.id} key={index}>\n                      {ito.name}\n                    </option>\n                  ))}\n                </select> */}\n                  <Select\n                    defaultValue={[]}\n                    isMulti\n                    name=\"colors\"\n                    options={\n                      permissionsData && permissionsData.length > 0\n                        ? permissionsData\n                        : []\n                    }\n                    classNamePrefix=\"select\"\n                    onChange={onChangeSelect}\n                  />\n                  <button\n                    type=\"button\"\n                    data-toggle=\"modal\"\n                    data-target=\"#exampleModalCentered\"\n                    className=\"btn btn-dark mt-2 btn-lg\"\n                    onClick={assignPermissionBtn}\n                  >\n                    Assign\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* <!-- Modal --> */}\n          {/* Add Confirmation Modal */}\n          {/* <!--end Modal --> */}\n        </div>\n        {/* <!-- end inner row --> */}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mpaStateToProps = (state) => ({\n  adminDetails: state.admin.adminDetails,\n  adminITO: state.admin.adminITOList,\n});\n\nexport default connect(mpaStateToProps, {\n  getSubAdminById,\n  adminLinkITO,\n  getAllPermissions,\n  assignPermission,\n})(AdminDetails);\n"],"sourceRoot":""}