{"version":3,"sources":["Components/Subscription/CreateSubscription/index.js"],"names":["CreateSubscription","dispatch","useDispatch","allAdmins","useSelector","state","ito","history","useHistory","useState","isRequiredd","setIsRequired","itoName","itoSeries","tokenName","description","threshold","startDate","endDate","term_sheets","threshold_type","alloted_admins","formData","setFormData","loading","setLoading","onChange","e","target","name","value","subsDetail","subscription","subscriptionData","data","useEffect","getAllAdminToAssignItos","getSubscriptionDetaill","className","type","placeholder","ito_name","required","ito_series","ito_token","displayValue","onRemove","selectedAdmins","onSearch","onSelect","selectedValues","options","test","onThresholdChange","start_date","end_date","style","display","paddingTop","padding","acceptedFiles","files","showFileNames","dropzoneText","showAlerts","filesLimit","maxFileSize","onDelete","deletedFile","termSheets","filter","term_sheet","disabled","onClick","preventDefault","FormData","key","append","forEach","allotedAdmin","index","createSubscription","saveAsDraft"],"mappings":"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","file":"static/js/51.4743cfbd.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getAllAdminToAssignItos,\n  createSubscription,\n} from \"../../../Redux/actions/actions\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { useHistory } from \"react-router\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport {\n  getSubscriptionDetaill,\n  saveAsDraft,\n} from \"../../../Services/subscription\";\nimport { useLocation } from \"react-router-dom\";\n\nconst CreateSubscription = () => {\n  const dispatch = useDispatch();\n  const allAdmins = useSelector((state) => state.ito?.allAdmins || []);\n  const history = useHistory();\n\n  const [isRequiredd, setIsRequired] = useState(false);\n\n  const [formData, setFormData] = useState({\n    itoName: \"\",\n    itoSeries: \"\",\n    tokenName: \"\",\n    description: \"\",\n    threshold: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    term_sheets: [],\n    threshold_type: \"limited\",\n    alloted_admins: [],\n  });\n\n  const [loading, setLoading] = useState(false);\n\n  const {\n    itoName,\n    itoSeries,\n    tokenName,\n    description,\n    threshold,\n    startDate,\n    endDate,\n    term_sheets,\n    threshold_type,\n    alloted_admins,\n  } = formData;\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onThresholdChange = (e) => {\n    const re = /^[0-9\\b]+$/;\n    if (e.target.value === \"\" || re.test(e.target.value)) {\n      setFormData({ ...formData, [e.target.name]: e.target.value });\n    }\n  };\n\n  const handleChangeFile = (files) => {\n    // // check if term_sheets already contain file with same name\n    // const fileExists = term_sheets.some(\n    //   (sheet) =>\n    //     sheet.name === files.find((file) => file.name === sheet.name)?.name\n    // );\n\n    setFormData({\n      ...formData,\n      term_sheets: files,\n    });\n  };\n  const handleDeleteFile = (deletedFile) => {\n    const termSheets = term_sheets.filter(\n      (term_sheet) => term_sheet.name !== deletedFile.name\n    );\n\n    setFormData({\n      ...formData,\n      term_sheets: termSheets,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setIsRequired(true);\n    const data = new FormData();\n    data.append(\"ito_name\", itoName);\n    data.append(\"ito_series\", itoSeries);\n    data.append(\"ito_token\", tokenName);\n    data.append(\"description\", description);\n    data.append(\"threshold\", threshold);\n    data.append(\"start_date\", startDate);\n    data.append(\"end_date\", endDate);\n    data.append(\"threshold_type\", threshold_type);\n    for (const key in term_sheets) {\n      data.append(\"term_sheets\", term_sheets[key]);\n    }\n    alloted_admins.forEach((allotedAdmin, index) => {\n      data.append(`alloted_admins[${index}][id]`, allotedAdmin[\"id\"]);\n    });\n\n    dispatch(createSubscription({ data, setFormData, setLoading, history }));\n  };\n\n  const subsDetail = useSelector((state) => {\n    return state?.subscription?.subscriptionData?.data;\n  });\n\n  useEffect(() => {\n    // same for subscription and ito\n    dispatch(getAllAdminToAssignItos());\n  }, []);\n\n  useEffect(() => {\n    dispatch(getSubscriptionDetaill());\n  }, []);\n\n  const handleSaveAsDraft = (e) => {\n    e.preventDefault();\n    setIsRequired(false);\n    // const draft = new FormData();\n    // draft.append(\"ito_name\", itoName);\n    // draft.append(\"ito_series\", itoSeries);\n    // draft.append(\"ito_token\", tokenName);\n    // draft.append(\"description\", description);\n    // draft.append(\"threshold\", threshold);\n    // draft.append(\"start_date\", startDate);\n    // draft.append(\"end_date\", endDate);\n    // draft.append(\"threshold_type\", threshold_type);\n    // dispatch(saveAsDraft({ draft }));\n    const data = {\n      ito_name: itoName || null,\n      ito_series: itoSeries || null,\n      ito_token: tokenName || null,\n      description: description || null,\n      threshold: threshold || null,\n      start_date: startDate || null,\n      end_date: endDate || null,\n      threshold_type: threshold_type || null,\n    };\n    dispatch(saveAsDraft(data));\n  };\n\n\n\n  return (\n    <div className=\"col-12 col-md-8 offset-md-2\">\n      {/* <!-- inner row --> */}\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h5>Add New Subscription</h5>\n\n          <div className=\"card mb-4\">\n            <div className=\"card-body p-5\">\n              <form className=\"form\">\n                <div className=\"form-group row\">\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label>Enter ITO Name</label>\n                      <input\n                        type=\"text\"\n                        placeholder=\"ITO Name\"\n                        className=\"form-control\"\n                        name=\"itoName\"\n                        value={itoName || subsDetail?.[0]?.ito_name}\n                        onChange={(e) => onChange(e)}\n                        required={isRequiredd}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label>Enter ITO Series Name</label>\n                      <input\n                        type=\"text\"\n                        placeholder=\"ITO Series Name\"\n                        className=\"form-control\"\n                        name=\"itoSeries\"\n                        value={itoSeries || subsDetail?.[0]?.ito_series}\n                        onChange={(e) => onChange(e)}\n                        required={isRequiredd}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <label>Enter Token Name</label>\n                    <input\n                      type=\"text\"\n                      placeholder=\"Token Name\"\n                      className=\"form-control\"\n                      name=\"tokenName\"\n                      value={tokenName || subsDetail?.[0]?.ito_token}\n                      onChange={(e) => onChange(e)}\n                      required={isRequiredd}\n                    />\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label>Admins</label>\n                      <Multiselect\n                        displayValue=\"label\"\n                        onRemove={function noRefCheck(selectedAdmins) {\n                          setFormData({\n                            ...formData,\n                            alloted_admins: [...selectedAdmins],\n                          });\n                        }}\n                        onSearch={function noRefCheck() {}}\n                        onSelect={function noRefCheck(selectedValues) {\n                          setFormData({\n                            ...formData,\n                            alloted_admins: [...selectedValues],\n                          });\n                        }}\n                        options={[...allAdmins]}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label>Enter Threshold in Dollars</label>\n                      <div className=\"input-icon\">\n                        <i>$</i>\n                        <input\n                          type=\"text\"\n                          placeholder=\"Enter Threshold in Dollars\"\n                          className=\"form-control\"\n                          name=\"threshold\"\n                          value={threshold || subsDetail?.[0]?.threshold}\n                          onChange={(e) => onThresholdChange(e)}\n                          required={isRequiredd}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label>Select Threshold Type</label>\n                      <select\n                        name=\"threshold_type\"\n                        className=\"form-control\"\n                        onChange={onChange}\n                        value={subsDetail?.threshold_type}\n                      >\n                        <option value=\"limited\">Limited</option>\n                        <option value=\"unlimited\">Unlimited</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label>Enter Start Date</label>\n                      <input\n                        type=\"date\"\n                        placeholder=\"Enter Start Date\"\n                        className=\"form-control\"\n                        name=\"startDate\"\n                        value={startDate || subsDetail?.[0]?.start_date}\n                        onChange={(e) => onChange(e)}\n                        required={isRequiredd}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label>Enter End Date</label>\n                      <input\n                        type=\"date\"\n                        placeholder=\"Enter End Date\"\n                        className=\"form-control\"\n                        name=\"endDate\"\n                        value={endDate || subsDetail?.[0]?.end_date}\n                        onChange={(e) => onChange(e)}\n                        required={isRequiredd}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-12\">\n                    <div className=\"form-group\">\n                      <label style={{ display: \"block\", paddingTop: \"15px\" }}>\n                        Upload Term-Sheets\n                      </label>\n                      <DropzoneArea\n                        style={{ padding: \"100px\" }}\n                        acceptedFiles={[\"application/pdf\"]}\n                        onChange={handleChangeFile}\n                        showFileNames\n                        dropzoneText=\"Click to Upload Files or Drag Here...\"\n                        showAlerts={true}\n                        filesLimit={5}\n                        maxFileSize={25000000}\n                        onDelete={handleDeleteFile}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-12\">\n                    <label>Enter Description</label>\n                    <textarea\n                      placeholder=\"Enter Description\"\n                      className=\"form-control\"\n                      name=\"description\"\n                      value={description || subsDetail?.[0]?.description}\n                      onChange={(e) => onChange(e)}\n                      required={isRequiredd}\n                    ></textarea>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-lg\"\n                  disabled={loading}\n                  onClick={handleSubmit}\n                >\n                  {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}{\" \"}\n                  CREATE SUBSCRIPTION\n                </button>\n\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-lg draft\"\n                  disabled={loading}\n                  onClick={handleSaveAsDraft}\n                >\n                  SAVE AS DRAFT\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <!-- end inner row --> */}\n    </div>\n  );\n};\n\nexport default CreateSubscription;\n"],"sourceRoot":""}