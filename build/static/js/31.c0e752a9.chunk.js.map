{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","Components/AgentManagement/AddInvestor/index.js"],"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_typeof","obj","Symbol","iterator","constructor","connect","state","exchange","getExchangeableTokens","isTokenSelected","getTokenDetailById","getOngoingSeriesById","isSeriesSelected","creatAgent","match","data","tokenData","seriesData","tokenSelected","selectedSeriesData","seriesSelected","useState","investment","formData","setFormData","loading","setLoading","itoSeriesId","setItoSeriesId","tokenName","tokenSymbol","setTokenDetail","useEffect","className","onSubmit","e","preventDefault","agent_id","params","id","ito_series","style","width","classNamePrefix","defaultValue","isDisabled","isLoading","isClearable","isRtl","isSearchable","name","options","onChange","token_name","token_symbol","ito_id","type","placeholder","value","required","disabled"],"mappings":"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","file":"static/js/31.c0e752a9.chunk.js","sourcesContent":["function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\n\nimport {\n  getExchangeableTokens,\n  isTokenSelected,\n  getTokenDetailById,\n  getOngoingSeriesById,\n  isSeriesSelected,\n  creatAgent,\n} from \"../../../Redux/actions/actions\";\n\nconst AddInvestor = ({\n  match,\n  exchange: {\n    tokenData,\n    data,\n    tokenSelected,\n    seriesData,\n    selectedSeriesData,\n    seriesSelected,\n  },\n  getExchangeableTokens,\n  isTokenSelected,\n  isSeriesSelected,\n  getTokenDetailById,\n  getOngoingSeriesById,\n  creatAgent,\n}) => {\n  const [formData, setFormData] = useState({\n    investment: \"\",\n  });\n  const [loading, setLoading] = useState(false);\n\n  const [itoSeriesId, setItoSeriesId] = useState(\"\");\n\n  const onChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    let agent_id = match.params.id;\n\n    formData.agent_id = agent_id;\n    formData.ito_series = itoSeriesId;\n    creatAgent({ formData, setItoSeriesId, setFormData, setLoading });\n  };\n\n  const [tokenDetail, setTokenDetail] = useState({\n    tokenName: \"\",\n    tokenSymbol: \"\",\n  });\n\n  const onChangeSelect = (e) => {\n    if (e) {\n      setTokenDetail({\n        tokenName: e.token_name,\n        tokenSymbol: e.token_symbol,\n      });\n      isTokenSelected(true, {});\n      getTokenDetailById(e.id);\n      getOngoingSeriesById(e.ito_id);\n    } else {\n      isSeriesSelected(false, {});\n      isTokenSelected(false, {});\n    }\n  };\n  const onChangeSeriesSelect = (e) => {\n    if (e) {\n      setItoSeriesId(e.id);\n    }\n  };\n\n  useEffect(() => {\n    getExchangeableTokens();\n  }, []);\n\n  return (\n    <div className=\"col-12 col-md-8 offset-md-2\">\n      {/* <!-- inner row --> */}\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"card mb-4\">\n            <div className=\"card-body p-5\">\n              <form className=\"form\" onSubmit={onSubmit}>\n                <div className=\"form-group row\">\n                  <div className=\"col-sm-6\">\n                    <div className=\"\" style={{ width: \"100%\" }}>\n                      <div className=\"form-group\">\n                        <label>Select Token</label>\n                        <Select\n                          style={{ width: \"auto\" }}\n                          className=\"basic-single w-100\"\n                          classNamePrefix=\"select\"\n                          defaultValue={[]}\n                          isDisabled={false}\n                          isLoading={false}\n                          isClearable={true}\n                          isRtl={false}\n                          isSearchable={true}\n                          name=\"color\"\n                          options={data && data.length > 0 ? data : []}\n                          onChange={onChangeSelect}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6 \">\n                    <div className=\"\">\n                      <div className=\"form-group\">\n                        <label>Select Series</label>\n                        <Select\n                          style={{ width: \"auto\" }}\n                          className=\"basic-single w-100\"\n                          classNamePrefix=\"select\"\n                          //   defaultValue={data[0]}\n                          isDisabled={false}\n                          isLoading={false}\n                          isClearable={true}\n                          isRtl={false}\n                          isSearchable={true}\n                          name=\"color\"\n                          options={\n                            seriesData && seriesData.length > 0\n                              ? seriesData\n                              : []\n                          }\n                          onChange={onChangeSeriesSelect}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label>Amount</label>\n                      <input\n                        type=\"number\"\n                        placeholder=\"Amount\"\n                        className=\"form-control py-4\"\n                        name=\"investment\"\n                        value={formData.investment}\n                        onChange={onChange}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"col-sm-12  mt-3\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-dark  btn-lg\"\n                      disabled={loading}\n                    >\n                      {loading && (\n                        <span className=\"spinner-border spinner-border-sm\"></span>\n                      )}{\" \"}\n                      SUBMIT\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <!-- end inner row --> */}\n    </div>\n  );\n};\n\n\n\nconst mapStateToProps = (state) => ({\n  exchange: state.exchange,\n});\n\nexport default connect(mapStateToProps, {\n  getExchangeableTokens,\n  isTokenSelected,\n  getTokenDetailById,\n  getOngoingSeriesById,\n  isSeriesSelected,\n  creatAgent,\n})(AddInvestor);\n"],"sourceRoot":""}